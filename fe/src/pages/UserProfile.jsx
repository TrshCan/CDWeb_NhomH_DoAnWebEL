import React, { useState } from 'react';

const MOCK_USER = {
  id: 'user123',
  isOwner: true, // ƒê·ªïi th√†nh 'false' ƒë·ªÉ ·∫©n n√∫t Edit profile
  displayName: 'Nguy·ªÖn VƒÉn TDC',
  username: 'tdcsocialsphere_user',
  bio: 'Ch√†o m·ª´ng ƒë·∫øn v·ªõi SocialSphere! S·∫µn s√†ng k·∫øt n·ªëi v√† chia s·∫ª. ƒê√¢y l√† d√≤ng gi·ªõi thi·ªáu b·∫£n th√¢n.',
  stats: {
    posts: 42,
    following: 150,
    followers: 890,
    joined: 'Th√°ng 7, 2023',
  },
  badges: [
    { id: 1, name: 'T√†i Tr·ª£ V√†ng', icon: 'üü°', desc: 'Ng∆∞·ªùi d√πng ƒë√≥ng g√≥p t√†i ch√≠nh t√≠ch c·ª±c.', awardedDate: '01/01/2024' },
    { id: 2, name: 'Chuy√™n Gia KS', icon: '‚öôÔ∏è', desc: 'ƒê√£ ho√†n th√†nh 100+ kh·∫£o s√°t quan tr·ªçng.', awardedDate: '15/03/2024' },
    { id: 3, name: 'VIP Code Blue', icon: 'üîµ', desc: 'Th√†nh vi√™n ƒë·∫∑c bi·ªát c·∫•p cao c·ªßa h·ªá th·ªëng.', awardedDate: '20/05/2024' },
    { id: 4, name: 'Ng∆∞·ªùi Chia S·∫ª', icon: '‚≠ê', desc: 'ƒê√£ chia s·∫ª 50+ b√†i vi·∫øt ch·∫•t l∆∞·ª£ng.', awardedDate: '10/06/2024' },
  ],
};

// --- COMPONENT CON: HUY HI·ªÜU (BADGE) ---
const BadgeCard = ({ badge }) => {
  const [showTooltip, setShowTooltip] = useState(false);
  const darkCardColor = '#1e2732'; // M√†u x√°m ƒë·∫≠m theo y√™u c·∫ßu

  return (
    <div 
      className="relative flex-shrink-0"
      onMouseEnter={() => setShowTooltip(true)}
      onMouseLeave={() => setShowTooltip(false)}
    >
      {/* Badge Card */}
      <div 
        className="w-[120px] h-[60px] rounded-lg p-2 flex flex-col items-center justify-center cursor-pointer transition duration-200 hover:scale-[1.05] shadow-lg"
        style={{ backgroundColor: darkCardColor }}
      >
        <span className="text-xl">{badge.icon}</span>
        <span className="text-white text-xs font-bold  text-center truncate">{badge.name}</span>
      </div>

      {/* Tooltip khi hover: ƒê√£ thay ƒë·ªïi v·ªã tr√≠ hi·ªÉn th·ªã l√™n tr√™n (bottom-full) thay v√¨ d∆∞·ªõi (top-full) 
          v√† tƒÉng z-index ƒë·ªÉ n√≥ kh√¥ng b·ªã che khu·∫•t.*/}
      {showTooltip && (
        <div 
            className="absolute z-50 bottom-full mb-2 left-1/2 transform -translate-x-1/2 p-3 w-60 rounded-lg shadow-xl bg-gray-700 text-white"
        >
          <p className="font-bold text-sm mb-1">{badge.name}</p>
          <p className="text-xs text-gray-300 italic">{badge.desc}</p>
          <p className="text-xs mt-1 border-t border-gray-600 pt-1 text-gray-400">C·∫•p ng√†y: {badge.awardedDate}</p>
        </div>
      )}
    </div>
  );
};


// --- COMPONENT CON: V√ôNG N·ªòI DUNG D∆Ø·ªöI TAB ---
const ContentTab = ({ activeTab }) => {
  const contentMap = {
    'B√†i vi·∫øt': 'ƒê√¢y l√† danh s√°ch c√°c B√†i vi·∫øt (Posts) c·ªßa ng∆∞·ªùi d√πng.',
    'Tr·∫£ l·ªùi': 'ƒê√¢y l√† danh s√°ch c√°c Tr·∫£ l·ªùi (Replies) v√† b√¨nh lu·∫≠n c·ªßa ng∆∞·ªùi d√πng.',
    'Likes': 'ƒê√¢y l√† danh s√°ch c√°c b√†i vi·∫øt m√† ng∆∞·ªùi d√πng ƒë√£ Likes.',
  };

  return (
    <div className="mt-4 p-4 text-gray-200 border border-gray-800 rounded-lg min-h-[300px] flex items-center justify-center bg-gray-900">
      <p className="text-lg font-light italic">{contentMap[activeTab] || 'Kh√¥ng c√≥ n·ªôi dung ƒë·ªÉ hi·ªÉn th·ªã.'}</p>
    </div>
  );
};


// --- COMPONENT CH√çNH: TRANG C√Å NH√ÇN ---
function ProfilePage() {
  const user = MOCK_USER;
  const [activeTab, setActiveTab] = useState('B√†i vi·∫øt');
  const TABS = ['B√†i vi·∫øt', 'Tr·∫£ l·ªùi', 'Likes'];
  const twitterBlue = '#1DA1F2'; // M√†u xanh Twitter

  const renderStat = (value, label) => (
    <div className="text-center">
      <span className="block text-white text-xl font-extrabold">{value}</span>
      <span className="block text-gray-400 text-xs font-medium uppercase">{label}</span>
    </div>
  );

  return (
    <div className="min-h-screen flex justify-center p-4 sm:p-8">
      <div className="w-full max-w-4xl shadow-2xl rounded-xl overflow-hidden">

        {/* V√ôNG 1: HEADER & TH√îNG TIN C∆† B·∫¢N */}
        <div className="relative p-6" style={{ backgroundColor: '#15202B' }}>

          {/* Banner Placeholder */}
          <div className="h-40 bg-gray-700 rounded-lg mb-20 flex items-center justify-center text-gray-400">
            ·∫¢nh B√¨a
          </div>

          {/* Avatar (120x120px) */}
          <div
            className="absolute left-8 top-28 w-32 h-32 rounded-full border-4 border-gray-800 overflow-hidden"
            style={{ backgroundColor: twitterBlue }} // M·∫∑c ƒë·ªãnh n·ªÅn xanh n·∫øu kh√¥ng c√≥ ·∫£nh
          >
            {/* S·ª≠ d·ª•ng SVG/Placeholder thay v√¨ URL ·∫£nh th·ª±c t·∫ø */}
            <div className="w-full h-full flex items-center justify-center text-5xl font-bold text-white">U</div>
            {/* N·∫øu c√≥ ·∫£nh: <img src={user.avatarUrl} alt="Avatar" className="w-full h-full object-cover" /> */}
          </div>

          {/* N√∫t Edit Profile */}
          {user.isOwner && (
            <button
              className="absolute right-6 top-52 mt-2 px-4 py-2 text-sm font-bold text-white border border-white rounded-full hover:bg-white hover:text-gray-800 transition duration-200 flex items-center"
            >
              {/* Thay th·∫ø Edit icon b·∫±ng SVG inline */}
              <svg className="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z"></path>
              </svg>
              Ch·ªânh s·ª≠a h·ªì s∆°
            </button>
          )}

          {/* Th√¥ng tin Text */}
          <div className="mt-6 pt-4">
            <h1 className="text-3xl font-extrabold text-white">{user.displayName}</h1>
            <p className="text-lg text-gray-400 mt-1">@{user.username}</p>
            <p className="text-gray-300 mt-3">{user.bio}</p>

            {/* Ng√†y tham gia */}
            <div className="flex items-center text-gray-400 mt-3 text-sm">
              {/* Thay th·∫ø Calendar icon b·∫±ng SVG inline */}
              <svg className="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
              </svg>
              Tham gia {user.stats.joined}
            </div>

            {/* Th·ªëng k√™ ngang h√†ng */}
            <div className="flex space-x-6 mt-4">
              {renderStat(user.stats.followers, 'Theo d√µi')}
              {renderStat(user.stats.following, 'ƒêang theo d√µi')}
              {renderStat(user.stats.posts, 'B√†i vi·∫øt')}
            </div>
          </div>
        </div>

        {/* V√ôNG 3: DANH S√ÅCH HUY HI·ªÜU */}
        {/* ƒê√£ th√™m min-h-[150px] v√† pb-8 ƒë·ªÉ ƒë·∫£m b·∫£o kh√¥ng gian cho tooltip hi·ªÉn th·ªã */}
        <div className="p-6 bg-gray-800 border-t border-gray-700 min-h-[150px] pb-8">
            <h3 className="text-xl font-extrabold text-white mb-4 flex items-center">
                {/* Thay th·∫ø Trophy icon b·∫±ng SVG inline */}
                <svg className="w-5 h-5 mr-2 text-yellow-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path strokeLinecap="round" strokeLinejoin="round" strokeWidth="2" d="M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21H6.737a2 2 0 01-1.789-2.894l-3.5-7A2 2 0 014.764 10H10m-2 0V7a3 3 0 016 0v3m-3 7h.01"></path>
                </svg>
                Huy hi·ªáu
            </h3>
            {/* ƒê√£ thay ƒë·ªïi t·ª´ overflow-x-auto sang flex-wrap ƒë·ªÉ c√°c Badge xu·ªëng d√≤ng, 
                tr√°nh tr∆∞·ªùng h·ª£p container b·ªã c·∫Øt khi tooltip m·ªü ra. */}
            <div className="flex flex-wrap justify-center  gap-4"> 
                {user.badges.map(badge => (
                    <BadgeCard key={badge.id} badge={badge} />
                ))}
            </div>
        </div>


        {/* V√ôNG 2: TABS ƒêI·ªÄU H∆Ø·ªöNG */}
        <div className="flex border-b border-gray-700 bg-gray-800 sticky top-0 z-10">
          {TABS.map(tab => (
            <button
              key={tab}
              onClick={() => setActiveTab(tab)}
              className={`
                flex-1 py-3 text-center text-sm font-bold transition duration-200 
                ${activeTab === tab
                  ? 'text-white border-b-4'
                  : 'text-gray-400 hover:bg-gray-700'
                }
              `}
              style={activeTab === tab ? { borderColor: twitterBlue } : {}}
            >
              {tab}
            </button>
          ))}
        </div>

        {/* V√ôNG N·ªòI DUNG (4) */}
        <div className="p-6 bg-gray-800">
          <ContentTab activeTab={activeTab} />
        </div>

      </div>
    </div>
  );
}

// Thay th·∫ø component ch√≠nh b·∫±ng ProfilePage
function App() {
  return <ProfilePage />;
}

export default App;
