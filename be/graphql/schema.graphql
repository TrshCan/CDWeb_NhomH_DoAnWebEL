# ----------------------------------
# Query (báº¯t buá»™c, cÃ³ thá»ƒ Ä‘á»ƒ trá»‘ng)
# ----------------------------------
type Query {
  # Láº¥y toÃ n bá»™ sá»± kiá»‡n
  getAllEvents: [Event!]! 
    @field(resolver: "App\\GraphQL\\Resolvers\\EventResolver@getAllEvents")

  # Láº¥y chi tiáº¿t sá»± kiá»‡n theo ID
  getEventById(id: ID!): Event 
    @field(resolver: "App\\GraphQL\\Resolvers\\EventResolver@getEventById")

  _empty: String
}

# ----------------------------------
# Event type
# ----------------------------------
type Event {
  id: ID!
  title: String!
  event_date: String!      # date lÆ°u dáº¡ng string
  location: String
  created_by: ID!
  created_at: String
  deleted_at: String
}

# ----------------------------------
# Input types
# ----------------------------------
input CreateEventInput {
  title: String!
  event_date: String!
  location: String
}

input UpdateEventInput {
  title: String
  event_date: String
  location: String
}

# ----------------------------------
# Mutations
# ----------------------------------
type Mutation {
  # ðŸŸ¢ Táº¡o event má»›i
  createEvent(input: CreateEventInput!): Event 
    @field(resolver: "App\\GraphQL\\Resolvers\\EventResolver@createEvent")

  # ðŸŸ¡ Cáº­p nháº­t event
  updateEvent(id: ID!, input: UpdateEventInput!): Event
    @field(resolver: "App\\GraphQL\\Resolvers\\EventResolver@updateEvent")

  # ðŸ”´ XÃ³a event
  deleteEvent(id: ID!): Boolean
    @field(resolver: "App\\GraphQL\\Resolvers\\EventResolver@deleteEvent")
}
