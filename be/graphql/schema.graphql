#import scalars.graphql

type Query {
    _empty: String
}

#import types/post.graphql
#import types/user.graphql
#import types/postMedia.graphql
#import types/deadline.graphql
#import types/event.graphql

#import inputs/postCreateInput.graphql
#import inputs/postUpdateInput.graphql

#import queries/postQueries.graphql
#import queries/eventQueries.graphql
#import queries/deadlineQueries.graphql

#import mutations/postMutations.graphql

type Mutation {
  loginUser(
    email: String!
    password: String!
  ): AuthPayload @field(resolver: "App\\GraphQL\\Resolvers\\UserResolver@loginUser")

  registerUser(
      name: String!
      email: String!
      password: String!
      phone: String
      address: String
    ): User
      @field(resolver: "App\\GraphQL\\Resolvers\\UserResolver@registerUser")
}

type AuthPayload {
  token: String!
  user: User!
  _empty: String
}



type User {
  id: ID!
  name: String!
  email: String!
  phone: String
  address: String
  role: String
  avatar: String
}



