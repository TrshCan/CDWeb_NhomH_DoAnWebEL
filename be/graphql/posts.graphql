# ===========================
# Post Type Definition
# ===========================
type Post {
  id: ID!
  user_id: ID!
  group_id: ID
  parent_id: ID
  type: String
  content: String
  media_url: String
  created_at: DateTime!
  updated_at: DateTime
  deleted_at: DateTime

  # Relationships
  user: User
  group: Group
  parent: Post
  children: [Post!]!
  likes: [PostLike!]!
  shares: [PostShare!]!
  groups: [Group!]!
}

# ===========================
# Input Types
# ===========================
input CreatePostInput {
  user_id: ID!
  group_id: ID
  parent_id: ID
  type: String
  content: String
  media_url: String
}

input UpdatePostInput {
  id: ID!
  type: String
  content: String
  media_url: String
}

# ===========================
# Query + Mutation Definitions
# ===========================
extend type Query {
  posts: [Post!]! @field(resolver: "PostResolver@all")
  post(id: ID!): Post @field(resolver: "PostResolver@find")
  postsByUser(user_id: ID!): [Post!]! @field(resolver: "PostResolver@byUser")
  postsByGroup(group_id: ID!): [Post!]! @field(resolver: "PostResolver@byGroup")
}

extend type Mutation {
  createPost(input: CreatePostInput!): Post @field(resolver: "PostResolver@create")
  updatePost(input: UpdatePostInput!): Post @field(resolver: "PostResolver@update")
  deletePost(id: ID!): Boolean @field(resolver: "PostResolver@delete")
}
